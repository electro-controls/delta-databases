//The following sequnce detrmines the current mode of
//operation (Heating, Cooling, or Deadband)
Variable HtCall
Variable ClCall
Variable HtRamp
Variable ClRamp
Variable LastState

// Effective SP
If ('UH2_OccMode' = 3) Or ('UH2_OccMode' = 4) Or ('UH2_OccMode' = 5) Then
    'UH2_ZoneHeat_EffSp' = Min (('UH2_Zone_EffSp' - ('UH2_ZoneDb_Sp' * 0.5)), 'UH2_OcHtgMax_Sp')
    'UH2_ZoneCool_EffSp' = Max (('UH2_Zone_EffSp' + ('UH2_ZoneDb_Sp' * 0.5)), 'UH2_OcClgMin_Sp')
  ElseIf  'UH2_OccMode' = 2 Then //Standby
    'UH2_ZoneHeat_EffSp' = Min (('UH2_Zone_EffSp' - 'UH2_StandbyOffset_Sp' - ('UH2_ZoneDb_Sp' * 0.5)), 'UH2_OcHtgMax_Sp')
    'UH2_ZoneCool_EffSp' = Max (('UH2_Zone_EffSp' + 'UH2_StandbyOffset_Sp' + ('UH2_ZoneDb_Sp' * 0.5)), 'UH2_OcClgMin_Sp')
  ElseIf  'UH2_OccMode' = 6 Then //Purge
    'UH2_ZoneHeat_EffSp' = Min (('UH2_Zone_EffSp' - 'UH2_StandbyOffset_Sp' - ('UH2_ZoneDb_Sp' * 0.5)), 'UH2_OcHtgMax_Sp')
    'UH2_ZoneCool_EffSp' = Max (('UH2_Zone_EffSp' + ('UH2_ZoneDb_Sp' * 0.5)), 'UH2_OcClgMin_Sp')
  Else
    'UH2_ZoneHeat_EffSp' = Min ('UH2_UnocHt_Sp', 'UH2_OcHtgMax_Sp')
    'UH2_ZoneCool_EffSp' = Max ('UH2_UnocCl_Sp', 'UH2_OcClgMin_Sp')
End If

//Links remote setpoint to effective
If 'UH2_Zone_RemSp' > 0 Then
 'UH2_Zone_EffSp' = 'UH2_Zone_RemSp'
Else
 'UH2_Zone_EffSp' = 'UH2_Zone_LocSp'
End If

//This just display the value of the CO for display at the NM level
'UH2_LocZoneHtg' = 'UH2_ZoneHtg_CO' * HtRamp * 0.01
'UH2_LocZoneClg' = 'UH2_ZoneClg_CO' * ClRamp * 0.01

//This determines the actual heating/cooling/deadband mode
//This also does the previous mode latching. Previous mode could then be used
//by other routines (like DAT control).
If (('UH2_ZoneHtg_CO' > 'UH2_EffZoneClg' + 5) And 'UH2_ControlMode' = 3) OnFor 'UH2_ZoneDbDelay_Sp':S Then
    HtCall = On
    'UH2_PrevControlMode' = 3
  ElseIf  (('UH2_ZoneClg_CO' > 'UH2_EffZoneHtg' + 5) And 'UH2_ControlMode' = 3) OnFor 'UH2_ZoneDbDelay_Sp':S Then
    ClCall = On
    'UH2_PrevControlMode' = 3
  ElseIf  (('UH2_ControlMode' = 1) And ('UH2_EffZoneHtg' <= 0)) OnFor 'UH2_ZoneDbDelay_Sp':S Then
    HtCall = Off
    'UH2_PrevControlMode' = 1
  ElseIf  (('UH2_ControlMode' = 2) And ('UH2_EffZoneClg' <= 0)) OnFor 'UH2_ZoneDbDelay_Sp':S Then
    ClCall = Off
    'UH2_PrevControlMode' = 2
End If

//Set current control mode
//This takes into account a manual override of the space heating/cooling %
//from the NM
If 'UH2_RemZoneHtg' >= 0 Then
    'UH2_EffZoneHtg' = 'UH2_RemZoneHtg'
    'UH2_EffZoneClg' = 0
    'UH2_ControlMode' = 1
  ElseIf  'UH2_RemZoneClg' >= 0 Then
    'UH2_EffZoneClg' = 'UH2_RemZoneClg'
    'UH2_EffZoneHtg' = 0
    'UH2_ControlMode' = 2
  ElseIf  ClCall Then
    'UH2_ControlMode' = 2
    'UH2_EffZoneHtg' = 'UH2_LocZoneHtg'
    'UH2_EffZoneClg' = 'UH2_LocZoneClg'
  ElseIf  HtCall Then
    'UH2_ControlMode' = 1
    'UH2_EffZoneHtg' = 'UH2_LocZoneHtg'
    'UH2_EffZoneClg' = 'UH2_LocZoneClg'
  Else
    'UH2_ControlMode' = 3
    'UH2_EffZoneHtg' = 'UH2_LocZoneHtg'
    'UH2_EffZoneClg' = 'UH2_LocZoneClg'
End If

//This provides ramp delay to sequence in mode %. Intended
//to minimize overshoot of cooresponding cascade control loops when
//major swings are seen as setpoints and/or zone temps. Also, allows for
//smoother sequenceing of staged outputs (when applicable).
If 'UH2_ControlMode' = 1 Then
    DoEvery 10S
    HtRamp = Min (100, HtRamp + (1000 / 'UH2_ZoneHtRamp_Sp'))
    End Do
  Else
    HtRamp = 0
End If
If 'UH2_ControlMode' = 2 Then
    DoEvery 10S
    ClRamp = Min (100, ClRamp + (1000 / 'UH2_ZoneClRamp_Sp'))
    End Do
  Else
    ClRamp = 0
End If

//Unoc Demand
'UH2_UnocHtCall' = Switch ( 'UH2_UnocHtCall', 'UH2_Eff_ZoneTemp', 'UH2_UnocHt_Sp', 'UH2_UnocHt_Sp' + 'UH2_UnocDb_Sp')
'UH2_UnocClCall' = Switch ( 'UH2_UnocClCall', 'UH2_Eff_ZoneTemp', 'UH2_UnocCl_Sp', 'UH2_UnocCl_Sp' - 'UH2_UnocDb_Sp')

//Standby Demand
'UH2_ZoneClDemand' = Switch ( 'UH2_ZoneClDemand', 'UH2_EffZoneClg', 99, 50)
'UH2_ZoneHtDemand' = Switch ( 'UH2_ZoneHtDemand', 'UH2_EffZoneHtg', 99, 50)